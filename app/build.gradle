/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api
//    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'
    // https://mvnrepository.com/artifact/org.eclipse.jetty.ee10/jetty-ee10-servlet
    implementation 'org.eclipse.jetty.ee10:jetty-ee10-servlet:12.0.16'

    implementation 'org.postgresql:postgresql:42.7.5'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'com.zaxxer:HikariCP:6.3.0'
    implementation 'org.slf4j:slf4j-simple:2.0.12'
    implementation 'org.apache.commons:commons-fileupload2-jakarta-servlet6:2.0.0-M2'
    implementation 'org.eclipse.jetty:jetty-server:12.0.16'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.flashback.Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
